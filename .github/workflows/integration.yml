# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Integration tests"

on:
    pull_request:
    push:
        branches:
            - "[0-9]+.[0-9]+.x"
            - "renovate/*"

jobs:
    postgres:
        name: "Postgres"

        runs-on: ${{ matrix.operating-system }}

        services:
            postgres:
                # Docker Hub image
                image: "postgres:${{ matrix.postgres-version }}"
                # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: eventstore
                options: >-
                  --health-cmd "pg_isready"
                ports:
                  - "5432:5432"

        strategy:
            matrix:
                dependencies:
                    - "locked"
                php-version:
                    - "8.3"
                operating-system:
                    - "ubuntu-latest"
                postgres-version:
                  - "12.19"
                  - "13.15"
                  - "14.12"
                  - "15.7"
                  - "16.3"

        env:
            DB_URL: 'pdo-pgsql://postgres:postgres@localhost:5432/eventstore?charset=utf8'

        steps:
            - name: "Checkout"
              uses: actions/checkout@v4

            - name: "Install PHP"
              uses: "shivammathur/setup-php@2.31.1"
              with:
                  coverage: "pcov"
                  php-version: "${{ matrix.php-version }}"
                  ini-values: memory_limit=-1
                  extensions: pdo_pgsql

            - uses: ramsey/composer-install@3.0.0
              with:
                dependency-versions: ${{ matrix.dependencies }}

            - name: "Tests"
              run: "vendor/bin/phpunit --testsuite=integration"

    mariadb:
      name: "mariadb"

      runs-on: ${{ matrix.operating-system }}

      services:
        mariadb:
          image: "mariadb:${{ matrix.mariadb-version }}"
          env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: "eventstore"

          options: >-
            --health-cmd "mariadb-admin ping --silent"
          ports:
            - "3306:3306"

      strategy:
        matrix:
          dependencies:
            - "locked"
          php-version:
            - "8.3"
          operating-system:
            - "ubuntu-latest"
          mariadb-version:
            - "10.5"
            - "10.6"
            - "10.11"
            - "11.1"
            - "11.4"

      env:
        DB_URL: 'pdo-mysql://root@127.0.0.1:3306/eventstore?charset=utf8'

      steps:
        - name: "Checkout"
          uses: actions/checkout@v4

        - name: "Install PHP"
          uses: "shivammathur/setup-php@2.31.1"
          with:
            coverage: "pcov"
            php-version: "${{ matrix.php-version }}"
            ini-values: memory_limit=-1
            extensions: pdo_mysql

        - uses: ramsey/composer-install@3.0.0
          with:
            dependency-versions: ${{ matrix.dependencies }}

        - name: "Tests"
          run: "vendor/bin/phpunit --testsuite=integration"

    mysql:
      name: "mysql"

      runs-on: ${{ matrix.operating-system }}

      services:
        mysql:
          image: "mysql:${{ matrix.mysql-version }}"

          env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: "eventstore"

          options: >-
            --health-cmd "mysqladmin ping --silent"
          ports:
            - "3306:3306"

      strategy:
        matrix:
          dependencies:
            - "locked"
          php-version:
            - "8.3"
          operating-system:
            - "ubuntu-latest"
          mysql-version:
            - "5.7"
            - "8.0"
            - "8.4"
            - "9.0"

      env:
        DB_URL: 'pdo-mysql://root@127.0.0.1:3306/eventstore?charset=utf8'

      steps:
        - name: "Checkout"
          uses: actions/checkout@v4

        - name: "Install PHP"
          uses: "shivammathur/setup-php@2.31.1"
          with:
            coverage: "pcov"
            php-version: "${{ matrix.php-version }}"
            ini-values: memory_limit=-1
            extensions: pdo_mysql

        - uses: ramsey/composer-install@3.0.0
          with:
            dependency-versions: ${{ matrix.dependencies }}

        - name: "Tests"
          run: "vendor/bin/phpunit --testsuite=integration"

    sqlite:
      name: "Sqlite"

      runs-on: ${{ matrix.operating-system }}

      strategy:
        matrix:
          dependencies:
            - "locked"
          php-version:
            - "8.3"
          operating-system:
            - "ubuntu-latest"

      steps:
        - name: "Checkout"
          uses: actions/checkout@v4

        - name: "Install PHP"
          uses: "shivammathur/setup-php@2.31.1"
          with:
            coverage: "pcov"
            php-version: "${{ matrix.php-version }}"
            ini-values: memory_limit=-1
            extensions: pdo_sqlite

        - uses: ramsey/composer-install@3.0.0
          with:
            dependency-versions: ${{ matrix.dependencies }}

        - name: "Tests"
          run: "vendor/bin/phpunit --testsuite=integration"
